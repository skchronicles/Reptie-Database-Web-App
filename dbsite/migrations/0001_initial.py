# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-04-06 20:35
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bibliography',
            fields=[
                ('referencenumber', models.CharField(db_column='ReferenceNumber', max_length=250, primary_key=True, serialize=False)),
                ('authors', models.CharField(blank=True, db_column='Authors', max_length=400, null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=450, null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=450, null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'Bibliography',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bibliorefer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organismid', models.IntegerField(db_column='OrganismID')),
                ('referencenumber', models.CharField(db_column='ReferenceNumber', max_length=250)),
            ],
            options={
                'db_table': 'BiblioRefer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organismid', models.IntegerField(db_column='OrganismID')),
                ('comments', models.CharField(db_column='Comments', max_length=250)),
            ],
            options={
                'db_table': 'Comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Commonname',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organismid', models.IntegerField(db_column='OrganismID')),
                ('commonname', models.CharField(db_column='CommonName', max_length=150)),
            ],
            options={
                'db_table': 'CommonName',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organismid', models.IntegerField(db_column='OrganismID')),
                ('location', models.CharField(db_column='Location', max_length=250)),
            ],
            options={
                'db_table': 'Distribution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organismid', models.IntegerField(db_column='OrganismID')),
                ('links', models.CharField(db_column='Links', max_length=250)),
            ],
            options={
                'db_table': 'Links',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('organismid', models.AutoField(db_column='OrganismID', primary_key=True, serialize=False)),
                ('highertaxa', models.TextField(blank=True, db_column='HigherTaxa', null=True)),
                ('genus', models.TextField(blank=True, db_column='Genus', null=True)),
                ('species', models.TextField(blank=True, db_column='Species', null=True)),
                ('authors', models.TextField(blank=True, db_column='Authors', null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('parantheses', models.TextField(blank=True, db_column='Parantheses', null=True)),
                ('synonyms', models.TextField(blank=True, db_column='Synonyms', null=True)),
                ('subspecies', models.TextField(blank=True, db_column='Subspecies', null=True)),
                ('commonnames', models.TextField(blank=True, db_column='CommonNames', null=True)),
                ('location', models.TextField(blank=True, db_column='Location', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('type', models.TextField(blank=True, db_column='Type', null=True)),
                ('photourl', models.TextField(blank=True, db_column='PhotoURL', null=True)),
                ('referencenumber', models.TextField(blank=True, db_column='ReferenceNumber', null=True)),
                ('etymology', models.TextField(blank=True, db_column='Etymology', null=True)),
                ('ncbi', models.TextField(blank=True, db_column='NCBI', null=True)),
                ('reproduction', models.TextField(blank=True, db_column='Reproduction', null=True)),
            ],
            options={
                'db_table': 'MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('organismid', models.IntegerField(db_column='OrganismID', primary_key=True, serialize=False)),
                ('highertaxa', models.TextField(blank=True, db_column='HigherTaxa', null=True)),
                ('genus', models.TextField(blank=True, db_column='Genus', null=True)),
                ('species', models.TextField(blank=True, db_column='Species', null=True)),
                ('authors', models.TextField(blank=True, db_column='Authors', null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('parantheses', models.TextField(blank=True, db_column='Parantheses', null=True)),
                ('etymology', models.TextField(blank=True, db_column='Etymology', null=True)),
                ('ncbi', models.TextField(blank=True, db_column='NCBI', null=True)),
                ('reproduction', models.TextField(blank=True, db_column='Reproduction', null=True)),
            ],
            options={
                'db_table': 'Organism',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubspeciesName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organismid', models.IntegerField(db_column='OrganismID')),
                ('subspecies_name', models.CharField(db_column='Subspecies_name', max_length=250)),
            ],
            options={
                'db_table': 'Subspecies_Name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organismid', models.CharField(db_column='OrganismID', max_length=11)),
                ('synonym_name', models.CharField(db_column='Synonym_Name', max_length=100)),
            ],
            options={
                'db_table': 'Synonym',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organismid', models.CharField(db_column='OrganismID', max_length=11)),
                ('types', models.CharField(db_column='Types', max_length=250)),
            ],
            options={
                'db_table': 'Types',
                'managed': False,
            },
        ),
    ]
